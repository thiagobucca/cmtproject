{"remainingRequest":"/Users/thiagobucca/myApp/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/thiagobucca/myApp/node_modules/ts-loader/index.js??ref--9-3!/Users/thiagobucca/myApp/node_modules/angular-router-loader/src/index.js!/Users/thiagobucca/myApp/node_modules/tslint-loader/index.js!/Users/thiagobucca/myApp/src/main/webapp/app/entities/region/region.route.ts","dependencies":[{"path":"/Users/thiagobucca/myApp/src/main/webapp/app/entities/region/region.route.ts","mtime":1544538916677},{"path":"/Users/thiagobucca/myApp/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/thiagobucca/myApp/node_modules/cache-loader/dist/cjs.js","mtime":1544538323324},{"path":"/Users/thiagobucca/myApp/node_modules/thread-loader/dist/cjs.js","mtime":1544538323028},{"path":"/Users/thiagobucca/myApp/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/thiagobucca/myApp/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/thiagobucca/myApp/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar core_2 = require(\"app/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar region_model_1 = require(\"app/shared/model/region.model\");\nvar region_service_1 = require(\"./region.service\");\nvar region_component_1 = require(\"./region.component\");\nvar region_detail_component_1 = require(\"./region-detail.component\");\nvar region_update_component_1 = require(\"./region-update.component\");\nvar region_delete_dialog_component_1 = require(\"./region-delete-dialog.component\");\nvar RegionResolve = /** @class */ (function () {\n    function RegionResolve(service) {\n        this.service = service;\n    }\n    RegionResolve.prototype.resolve = function (route, state) {\n        var id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(operators_1.filter(function (response) { return response.ok; }), operators_1.map(function (region) { return region.body; }));\n        }\n        return rxjs_1.of(new region_model_1.Region());\n    };\n    var _a;\n    RegionResolve = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof region_service_1.RegionService !== \"undefined\" && region_service_1.RegionService) === \"function\" ? _a : Object])\n    ], RegionResolve);\n    return RegionResolve;\n}());\nexports.RegionResolve = RegionResolve;\nexports.regionRoute = [\n    {\n        path: 'region',\n        component: region_component_1.RegionComponent,\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Regions'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'region/:id/view',\n        component: region_detail_component_1.RegionDetailComponent,\n        resolve: {\n            region: RegionResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Regions'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'region/new',\n        component: region_update_component_1.RegionUpdateComponent,\n        resolve: {\n            region: RegionResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Regions'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'region/:id/edit',\n        component: region_update_component_1.RegionUpdateComponent,\n        resolve: {\n            region: RegionResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Regions'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    }\n];\nexports.regionPopupRoute = [\n    {\n        path: 'region/:id/delete',\n        component: region_delete_dialog_component_1.RegionDeletePopupComponent,\n        resolve: {\n            region: RegionResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Regions'\n        },\n        canActivate: [core_2.UserRouteAccessService],\n        outlet: 'popup'\n    }\n];\n",{"version":3,"file":"/Users/thiagobucca/myApp/src/main/webapp/app/entities/region/region.route.ts","sourceRoot":"","sources":["/Users/thiagobucca/myApp/node_modules/angular-router-loader/src/index.js!/Users/thiagobucca/myApp/node_modules/tslint-loader/index.js!/Users/thiagobucca/myApp/src/main/webapp/app/entities/region/region.route.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAG3C,iCAAkD;AAClD,6BAAsC;AACtC,4CAA6C;AAC7C,8DAAuD;AACvD,mDAAiD;AACjD,uDAAqD;AACrD,qEAAkE;AAClE,qEAAkE;AAClE,mFAA8E;AAI9E;IACI,uBAAoB,OAAsB;QAAtB,YAAO,GAAP,OAAO,CAAe;IAAG,CAAC;IAE9C,+BAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC7D,IAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,IAAI,EAAE,EAAE;YACJ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAC7B,kBAAM,CAAC,UAAC,QAA8B,IAAK,OAAA,QAAQ,CAAC,EAAE,EAAX,CAAW,CAAC,EACvD,eAAG,CAAC,UAAC,MAA4B,IAAK,OAAA,MAAM,CAAC,IAAI,EAAX,CAAW,CAAC,CACrD,CAAC;SACL;QACD,OAAO,SAAE,CAAC,IAAI,qBAAM,EAAE,CAAC,CAAC;IAC5B,CAAC;;IAZQ,aAAa;QADzB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEF,8BAAa,oBAAb,8BAAa;OADjC,aAAa,CAazB;IAAD,oBAAC;CAAA,AAbD,IAaC;AAbY,sCAAa;AAeb,QAAA,WAAW,GAAW;IAC/B;QACI,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,kCAAe;QAC1B,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,SAAS;SACvB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,+CAAqB;QAChC,OAAO,EAAE;YACL,MAAM,EAAE,aAAa;SACxB;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,SAAS;SACvB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,+CAAqB;QAChC,OAAO,EAAE;YACL,MAAM,EAAE,aAAa;SACxB;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,SAAS;SACvB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,+CAAqB;QAChC,OAAO,EAAE;YACL,MAAM,EAAE,aAAa;SACxB;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,SAAS;SACvB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;CACJ,CAAC;AAEW,QAAA,gBAAgB,GAAW;IACpC;QACI,IAAI,EAAE,mBAAmB;QACzB,SAAS,EAAE,2DAA0B;QACrC,OAAO,EAAE;YACL,MAAM,EAAE,aAAa;SACxB;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,SAAS;SACvB;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;QACrC,MAAM,EAAE,OAAO;KAClB;CACJ,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\nimport { UserRouteAccessService } from 'app/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Region } from 'app/shared/model/region.model';\nimport { RegionService } from './region.service';\nimport { RegionComponent } from './region.component';\nimport { RegionDetailComponent } from './region-detail.component';\nimport { RegionUpdateComponent } from './region-update.component';\nimport { RegionDeletePopupComponent } from './region-delete-dialog.component';\nimport { IRegion } from 'app/shared/model/region.model';\n\n@Injectable({ providedIn: 'root' })\nexport class RegionResolve implements Resolve<IRegion> {\n    constructor(private service: RegionService) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Region> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(\n                filter((response: HttpResponse<Region>) => response.ok),\n                map((region: HttpResponse<Region>) => region.body)\n            );\n        }\n        return of(new Region());\n    }\n}\n\nexport const regionRoute: Routes = [\n    {\n        path: 'region',\n        component: RegionComponent,\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Regions'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'region/:id/view',\n        component: RegionDetailComponent,\n        resolve: {\n            region: RegionResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Regions'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'region/new',\n        component: RegionUpdateComponent,\n        resolve: {\n            region: RegionResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Regions'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'region/:id/edit',\n        component: RegionUpdateComponent,\n        resolve: {\n            region: RegionResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Regions'\n        },\n        canActivate: [UserRouteAccessService]\n    }\n];\n\nexport const regionPopupRoute: Routes = [\n    {\n        path: 'region/:id/delete',\n        component: RegionDeletePopupComponent,\n        resolve: {\n            region: RegionResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'Regions'\n        },\n        canActivate: [UserRouteAccessService],\n        outlet: 'popup'\n    }\n];\n"]}]}