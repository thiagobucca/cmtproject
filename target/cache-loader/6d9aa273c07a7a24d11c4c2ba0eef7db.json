{"remainingRequest":"/Users/thiagobucca/cmt/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/thiagobucca/cmt/node_modules/ts-loader/index.js??ref--9-3!/Users/thiagobucca/cmt/node_modules/angular-router-loader/src/index.js!/Users/thiagobucca/cmt/node_modules/tslint-loader/index.js!/Users/thiagobucca/cmt/src/main/webapp/app/entities/task/task.route.ts","dependencies":[{"path":"/Users/thiagobucca/cmt/src/main/webapp/app/entities/task/task.route.ts","mtime":1544842282573},{"path":"/Users/thiagobucca/cmt/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/thiagobucca/cmt/node_modules/cache-loader/dist/cjs.js","mtime":1544842230621},{"path":"/Users/thiagobucca/cmt/node_modules/thread-loader/dist/cjs.js","mtime":1544842230577},{"path":"/Users/thiagobucca/cmt/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/thiagobucca/cmt/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/thiagobucca/cmt/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar core_2 = require(\"app/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar task_model_1 = require(\"app/shared/model/task.model\");\nvar task_service_1 = require(\"./task.service\");\nvar task_component_1 = require(\"./task.component\");\nvar task_detail_component_1 = require(\"./task-detail.component\");\nvar task_update_component_1 = require(\"./task-update.component\");\nvar task_delete_dialog_component_1 = require(\"./task-delete-dialog.component\");\nvar TaskResolve = /** @class */ (function () {\n    function TaskResolve(service) {\n        this.service = service;\n    }\n    TaskResolve.prototype.resolve = function (route, state) {\n        var id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(operators_1.filter(function (response) { return response.ok; }), operators_1.map(function (task) { return task.body; }));\n        }\n        return rxjs_1.of(new task_model_1.Task());\n    };\n    var _a;\n    TaskResolve = tslib_1.__decorate([\n        core_1.Injectable({ providedIn: 'root' }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof task_service_1.TaskService !== \"undefined\" && task_service_1.TaskService) === \"function\" ? _a : Object])\n    ], TaskResolve);\n    return TaskResolve;\n}());\nexports.TaskResolve = TaskResolve;\nexports.taskRoute = [\n    {\n        path: 'task',\n        component: task_component_1.TaskComponent,\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'cmtApp.task.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'task/:id/view',\n        component: task_detail_component_1.TaskDetailComponent,\n        resolve: {\n            task: TaskResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'cmtApp.task.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'task/new',\n        component: task_update_component_1.TaskUpdateComponent,\n        resolve: {\n            task: TaskResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'cmtApp.task.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    },\n    {\n        path: 'task/:id/edit',\n        component: task_update_component_1.TaskUpdateComponent,\n        resolve: {\n            task: TaskResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'cmtApp.task.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService]\n    }\n];\nexports.taskPopupRoute = [\n    {\n        path: 'task/:id/delete',\n        component: task_delete_dialog_component_1.TaskDeletePopupComponent,\n        resolve: {\n            task: TaskResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'cmtApp.task.home.title'\n        },\n        canActivate: [core_2.UserRouteAccessService],\n        outlet: 'popup'\n    }\n];\n",{"version":3,"file":"/Users/thiagobucca/cmt/src/main/webapp/app/entities/task/task.route.ts","sourceRoot":"","sources":["/Users/thiagobucca/cmt/node_modules/angular-router-loader/src/index.js!/Users/thiagobucca/cmt/node_modules/tslint-loader/index.js!/Users/thiagobucca/cmt/src/main/webapp/app/entities/task/task.route.ts"],"names":[],"mappings":";;;AAAA,sCAA2C;AAG3C,iCAAkD;AAClD,6BAAsC;AACtC,4CAA6C;AAC7C,0DAAmD;AACnD,+CAA6C;AAC7C,mDAAiD;AACjD,iEAA8D;AAC9D,iEAA8D;AAC9D,+EAA0E;AAI1E;IACI,qBAAoB,OAAoB;QAApB,YAAO,GAAP,OAAO,CAAa;IAAG,CAAC;IAE5C,6BAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAC7D,IAAM,EAAE,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC1D,IAAI,EAAE,EAAE;YACJ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAC7B,kBAAM,CAAC,UAAC,QAA4B,IAAK,OAAA,QAAQ,CAAC,EAAE,EAAX,CAAW,CAAC,EACrD,eAAG,CAAC,UAAC,IAAwB,IAAK,OAAA,IAAI,CAAC,IAAI,EAAT,CAAS,CAAC,CAC/C,CAAC;SACL;QACD,OAAO,SAAE,CAAC,IAAI,iBAAI,EAAE,CAAC,CAAC;IAC1B,CAAC;;IAZQ,WAAW;QADvB,iBAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;qEAEF,0BAAW,oBAAX,0BAAW;OAD/B,WAAW,CAavB;IAAD,kBAAC;CAAA,AAbD,IAaC;AAbY,kCAAW;AAeX,QAAA,SAAS,GAAW;IAC7B;QACI,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,8BAAa;QACxB,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wBAAwB;SACtC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,2CAAmB;QAC9B,OAAO,EAAE;YACL,IAAI,EAAE,WAAW;SACpB;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wBAAwB;SACtC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,2CAAmB;QAC9B,OAAO,EAAE;YACL,IAAI,EAAE,WAAW;SACpB;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wBAAwB;SACtC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;IACD;QACI,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,2CAAmB;QAC9B,OAAO,EAAE;YACL,IAAI,EAAE,WAAW;SACpB;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wBAAwB;SACtC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;KACxC;CACJ,CAAC;AAEW,QAAA,cAAc,GAAW;IAClC;QACI,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,uDAAwB;QACnC,OAAO,EAAE;YACL,IAAI,EAAE,WAAW;SACpB;QACD,IAAI,EAAE;YACF,WAAW,EAAE,CAAC,WAAW,CAAC;YAC1B,SAAS,EAAE,wBAAwB;SACtC;QACD,WAAW,EAAE,CAAC,6BAAsB,CAAC;QACrC,MAAM,EAAE,OAAO;KAClB;CACJ,CAAC","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpResponse } from '@angular/common/http';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Routes } from '@angular/router';\nimport { UserRouteAccessService } from 'app/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Task } from 'app/shared/model/task.model';\nimport { TaskService } from './task.service';\nimport { TaskComponent } from './task.component';\nimport { TaskDetailComponent } from './task-detail.component';\nimport { TaskUpdateComponent } from './task-update.component';\nimport { TaskDeletePopupComponent } from './task-delete-dialog.component';\nimport { ITask } from 'app/shared/model/task.model';\n\n@Injectable({ providedIn: 'root' })\nexport class TaskResolve implements Resolve<ITask> {\n    constructor(private service: TaskService) {}\n\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Task> {\n        const id = route.params['id'] ? route.params['id'] : null;\n        if (id) {\n            return this.service.find(id).pipe(\n                filter((response: HttpResponse<Task>) => response.ok),\n                map((task: HttpResponse<Task>) => task.body)\n            );\n        }\n        return of(new Task());\n    }\n}\n\nexport const taskRoute: Routes = [\n    {\n        path: 'task',\n        component: TaskComponent,\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'cmtApp.task.home.title'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'task/:id/view',\n        component: TaskDetailComponent,\n        resolve: {\n            task: TaskResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'cmtApp.task.home.title'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'task/new',\n        component: TaskUpdateComponent,\n        resolve: {\n            task: TaskResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'cmtApp.task.home.title'\n        },\n        canActivate: [UserRouteAccessService]\n    },\n    {\n        path: 'task/:id/edit',\n        component: TaskUpdateComponent,\n        resolve: {\n            task: TaskResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'cmtApp.task.home.title'\n        },\n        canActivate: [UserRouteAccessService]\n    }\n];\n\nexport const taskPopupRoute: Routes = [\n    {\n        path: 'task/:id/delete',\n        component: TaskDeletePopupComponent,\n        resolve: {\n            task: TaskResolve\n        },\n        data: {\n            authorities: ['ROLE_USER'],\n            pageTitle: 'cmtApp.task.home.title'\n        },\n        canActivate: [UserRouteAccessService],\n        outlet: 'popup'\n    }\n];\n"]}]}