{"remainingRequest":"/Users/thiagobucca/Izio/cmtproject/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/thiagobucca/Izio/cmtproject/node_modules/ts-loader/index.js??ref--9-3!/Users/thiagobucca/Izio/cmtproject/node_modules/angular-router-loader/src/index.js!/Users/thiagobucca/Izio/cmtproject/node_modules/tslint-loader/index.js!/Users/thiagobucca/Izio/cmtproject/src/main/webapp/app/entities/country/country-update.component.ts","dependencies":[{"path":"/Users/thiagobucca/Izio/cmtproject/src/main/webapp/app/entities/country/country-update.component.ts","mtime":1544538916959},{"path":"/Users/thiagobucca/Izio/cmtproject/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/thiagobucca/Izio/cmtproject/node_modules/cache-loader/dist/cjs.js","mtime":1544538323324},{"path":"/Users/thiagobucca/Izio/cmtproject/node_modules/thread-loader/dist/cjs.js","mtime":1544538323028},{"path":"/Users/thiagobucca/Izio/cmtproject/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/thiagobucca/Izio/cmtproject/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/thiagobucca/Izio/cmtproject/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar country_service_1 = require(\"./country.service\");\nvar region_1 = require(\"app/entities/region\");\nvar CountryUpdateComponent = /** @class */ (function () {\n    function CountryUpdateComponent(jhiAlertService, countryService, regionService, activatedRoute) {\n        this.jhiAlertService = jhiAlertService;\n        this.countryService = countryService;\n        this.regionService = regionService;\n        this.activatedRoute = activatedRoute;\n    }\n    CountryUpdateComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(function (_a) {\n            var country = _a.country;\n            _this.country = country;\n        });\n        this.regionService.query({ filter: 'country-is-null' }).subscribe(function (res) {\n            if (!_this.country.region || !_this.country.region.id) {\n                _this.regions = res.body;\n            }\n            else {\n                _this.regionService.find(_this.country.region.id).subscribe(function (subRes) {\n                    _this.regions = [subRes.body].concat(res.body);\n                }, function (subRes) { return _this.onError(subRes.message); });\n            }\n        }, function (res) { return _this.onError(res.message); });\n    };\n    CountryUpdateComponent.prototype.previousState = function () {\n        window.history.back();\n    };\n    CountryUpdateComponent.prototype.save = function () {\n        this.isSaving = true;\n        if (this.country.id !== undefined) {\n            this.subscribeToSaveResponse(this.countryService.update(this.country));\n        }\n        else {\n            this.subscribeToSaveResponse(this.countryService.create(this.country));\n        }\n    };\n    CountryUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    CountryUpdateComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n        this.previousState();\n    };\n    CountryUpdateComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    CountryUpdateComponent.prototype.onError = function (errorMessage) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    };\n    CountryUpdateComponent.prototype.trackRegionById = function (index, item) {\n        return item.id;\n    };\n    var _a, _b, _c, _d;\n    CountryUpdateComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-country-update',\n            templateUrl: './country-update.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof country_service_1.CountryService !== \"undefined\" && country_service_1.CountryService) === \"function\" ? _b : Object, typeof (_c = typeof region_1.RegionService !== \"undefined\" && region_1.RegionService) === \"function\" ? _c : Object, typeof (_d = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _d : Object])\n    ], CountryUpdateComponent);\n    return CountryUpdateComponent;\n}());\nexports.CountryUpdateComponent = CountryUpdateComponent;\n",{"version":3,"file":"/Users/thiagobucca/Izio/cmtproject/src/main/webapp/app/entities/country/country-update.component.ts","sourceRoot":"","sources":["/Users/thiagobucca/Izio/cmtproject/node_modules/angular-router-loader/src/index.js!/Users/thiagobucca/Izio/cmtproject/node_modules/tslint-loader/index.js!/Users/thiagobucca/Izio/cmtproject/src/main/webapp/app/entities/country/country-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JhiAlertService } from 'ng-jhipster';\n\nimport { ICountry } from 'app/shared/model/country.model';\nimport { CountryService } from './country.service';\nimport { IRegion } from 'app/shared/model/region.model';\nimport { RegionService } from 'app/entities/region';\n\n@Component({\n    selector: 'jhi-country-update',\n    templateUrl: './country-update.component.html'\n})\nexport class CountryUpdateComponent implements OnInit {\n    country: ICountry;\n    isSaving: boolean;\n\n    regions: IRegion[];\n\n    constructor(\n        private jhiAlertService: JhiAlertService,\n        private countryService: CountryService,\n        private regionService: RegionService,\n        private activatedRoute: ActivatedRoute\n    ) {}\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ country }) => {\n            this.country = country;\n        });\n        this.regionService.query({ filter: 'country-is-null' }).subscribe(\n            (res: HttpResponse<IRegion[]>) => {\n                if (!this.country.region || !this.country.region.id) {\n                    this.regions = res.body;\n                } else {\n                    this.regionService.find(this.country.region.id).subscribe(\n                        (subRes: HttpResponse<IRegion>) => {\n                            this.regions = [subRes.body].concat(res.body);\n                        },\n                        (subRes: HttpErrorResponse) => this.onError(subRes.message)\n                    );\n                }\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        if (this.country.id !== undefined) {\n            this.subscribeToSaveResponse(this.countryService.update(this.country));\n        } else {\n            this.subscribeToSaveResponse(this.countryService.create(this.country));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<ICountry>>) {\n        result.subscribe((res: HttpResponse<ICountry>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    private onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n    }\n\n    private onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n\n    trackRegionById(index: number, item: IRegion) {\n        return item.id;\n    }\n}\n"]}]}