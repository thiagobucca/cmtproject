{"remainingRequest":"/Users/thiagobucca/myApp/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/thiagobucca/myApp/node_modules/ts-loader/index.js??ref--9-3!/Users/thiagobucca/myApp/node_modules/angular-router-loader/src/index.js!/Users/thiagobucca/myApp/node_modules/tslint-loader/index.js!/Users/thiagobucca/myApp/src/main/webapp/app/entities/job-history/job-history-update.component.ts","dependencies":[{"path":"/Users/thiagobucca/myApp/src/main/webapp/app/entities/job-history/job-history-update.component.ts","mtime":1544538918184},{"path":"/Users/thiagobucca/myApp/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/thiagobucca/myApp/node_modules/cache-loader/dist/cjs.js","mtime":1544538323324},{"path":"/Users/thiagobucca/myApp/node_modules/thread-loader/dist/cjs.js","mtime":1544538323028},{"path":"/Users/thiagobucca/myApp/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/thiagobucca/myApp/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/thiagobucca/myApp/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar moment = require(\"moment\");\nvar input_constants_1 = require(\"app/shared/constants/input.constants\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar job_history_service_1 = require(\"./job-history.service\");\nvar job_1 = require(\"app/entities/job\");\nvar department_1 = require(\"app/entities/department\");\nvar employee_1 = require(\"app/entities/employee\");\nvar JobHistoryUpdateComponent = /** @class */ (function () {\n    function JobHistoryUpdateComponent(jhiAlertService, jobHistoryService, jobService, departmentService, employeeService, activatedRoute) {\n        this.jhiAlertService = jhiAlertService;\n        this.jobHistoryService = jobHistoryService;\n        this.jobService = jobService;\n        this.departmentService = departmentService;\n        this.employeeService = employeeService;\n        this.activatedRoute = activatedRoute;\n    }\n    JobHistoryUpdateComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(function (_a) {\n            var jobHistory = _a.jobHistory;\n            _this.jobHistory = jobHistory;\n            _this.startDate = _this.jobHistory.startDate != null ? _this.jobHistory.startDate.format(input_constants_1.DATE_TIME_FORMAT) : null;\n            _this.endDate = _this.jobHistory.endDate != null ? _this.jobHistory.endDate.format(input_constants_1.DATE_TIME_FORMAT) : null;\n        });\n        this.jobService.query({ filter: 'jobhistory-is-null' }).subscribe(function (res) {\n            if (!_this.jobHistory.job || !_this.jobHistory.job.id) {\n                _this.jobs = res.body;\n            }\n            else {\n                _this.jobService.find(_this.jobHistory.job.id).subscribe(function (subRes) {\n                    _this.jobs = [subRes.body].concat(res.body);\n                }, function (subRes) { return _this.onError(subRes.message); });\n            }\n        }, function (res) { return _this.onError(res.message); });\n        this.departmentService.query({ filter: 'jobhistory-is-null' }).subscribe(function (res) {\n            if (!_this.jobHistory.department || !_this.jobHistory.department.id) {\n                _this.departments = res.body;\n            }\n            else {\n                _this.departmentService.find(_this.jobHistory.department.id).subscribe(function (subRes) {\n                    _this.departments = [subRes.body].concat(res.body);\n                }, function (subRes) { return _this.onError(subRes.message); });\n            }\n        }, function (res) { return _this.onError(res.message); });\n        this.employeeService.query({ filter: 'jobhistory-is-null' }).subscribe(function (res) {\n            if (!_this.jobHistory.employee || !_this.jobHistory.employee.id) {\n                _this.employees = res.body;\n            }\n            else {\n                _this.employeeService.find(_this.jobHistory.employee.id).subscribe(function (subRes) {\n                    _this.employees = [subRes.body].concat(res.body);\n                }, function (subRes) { return _this.onError(subRes.message); });\n            }\n        }, function (res) { return _this.onError(res.message); });\n    };\n    JobHistoryUpdateComponent.prototype.previousState = function () {\n        window.history.back();\n    };\n    JobHistoryUpdateComponent.prototype.save = function () {\n        this.isSaving = true;\n        this.jobHistory.startDate = this.startDate != null ? moment(this.startDate, input_constants_1.DATE_TIME_FORMAT) : null;\n        this.jobHistory.endDate = this.endDate != null ? moment(this.endDate, input_constants_1.DATE_TIME_FORMAT) : null;\n        if (this.jobHistory.id !== undefined) {\n            this.subscribeToSaveResponse(this.jobHistoryService.update(this.jobHistory));\n        }\n        else {\n            this.subscribeToSaveResponse(this.jobHistoryService.create(this.jobHistory));\n        }\n    };\n    JobHistoryUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    JobHistoryUpdateComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n        this.previousState();\n    };\n    JobHistoryUpdateComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    JobHistoryUpdateComponent.prototype.onError = function (errorMessage) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    };\n    JobHistoryUpdateComponent.prototype.trackJobById = function (index, item) {\n        return item.id;\n    };\n    JobHistoryUpdateComponent.prototype.trackDepartmentById = function (index, item) {\n        return item.id;\n    };\n    JobHistoryUpdateComponent.prototype.trackEmployeeById = function (index, item) {\n        return item.id;\n    };\n    var _a, _b, _c, _d, _e, _f;\n    JobHistoryUpdateComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-job-history-update',\n            templateUrl: './job-history-update.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof job_history_service_1.JobHistoryService !== \"undefined\" && job_history_service_1.JobHistoryService) === \"function\" ? _b : Object, typeof (_c = typeof job_1.JobService !== \"undefined\" && job_1.JobService) === \"function\" ? _c : Object, typeof (_d = typeof department_1.DepartmentService !== \"undefined\" && department_1.DepartmentService) === \"function\" ? _d : Object, typeof (_e = typeof employee_1.EmployeeService !== \"undefined\" && employee_1.EmployeeService) === \"function\" ? _e : Object, typeof (_f = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _f : Object])\n    ], JobHistoryUpdateComponent);\n    return JobHistoryUpdateComponent;\n}());\nexports.JobHistoryUpdateComponent = JobHistoryUpdateComponent;\n",{"version":3,"file":"/Users/thiagobucca/myApp/src/main/webapp/app/entities/job-history/job-history-update.component.ts","sourceRoot":"","sources":["/Users/thiagobucca/myApp/node_modules/angular-router-loader/src/index.js!/Users/thiagobucca/myApp/node_modules/tslint-loader/index.js!/Users/thiagobucca/myApp/src/main/webapp/app/entities/job-history/job-history-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport * as moment from 'moment';\nimport { DATE_TIME_FORMAT } from 'app/shared/constants/input.constants';\nimport { JhiAlertService } from 'ng-jhipster';\n\nimport { IJobHistory } from 'app/shared/model/job-history.model';\nimport { JobHistoryService } from './job-history.service';\nimport { IJob } from 'app/shared/model/job.model';\nimport { JobService } from 'app/entities/job';\nimport { IDepartment } from 'app/shared/model/department.model';\nimport { DepartmentService } from 'app/entities/department';\nimport { IEmployee } from 'app/shared/model/employee.model';\nimport { EmployeeService } from 'app/entities/employee';\n\n@Component({\n    selector: 'jhi-job-history-update',\n    templateUrl: './job-history-update.component.html'\n})\nexport class JobHistoryUpdateComponent implements OnInit {\n    jobHistory: IJobHistory;\n    isSaving: boolean;\n\n    jobs: IJob[];\n\n    departments: IDepartment[];\n\n    employees: IEmployee[];\n    startDate: string;\n    endDate: string;\n\n    constructor(\n        private jhiAlertService: JhiAlertService,\n        private jobHistoryService: JobHistoryService,\n        private jobService: JobService,\n        private departmentService: DepartmentService,\n        private employeeService: EmployeeService,\n        private activatedRoute: ActivatedRoute\n    ) {}\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ jobHistory }) => {\n            this.jobHistory = jobHistory;\n            this.startDate = this.jobHistory.startDate != null ? this.jobHistory.startDate.format(DATE_TIME_FORMAT) : null;\n            this.endDate = this.jobHistory.endDate != null ? this.jobHistory.endDate.format(DATE_TIME_FORMAT) : null;\n        });\n        this.jobService.query({ filter: 'jobhistory-is-null' }).subscribe(\n            (res: HttpResponse<IJob[]>) => {\n                if (!this.jobHistory.job || !this.jobHistory.job.id) {\n                    this.jobs = res.body;\n                } else {\n                    this.jobService.find(this.jobHistory.job.id).subscribe(\n                        (subRes: HttpResponse<IJob>) => {\n                            this.jobs = [subRes.body].concat(res.body);\n                        },\n                        (subRes: HttpErrorResponse) => this.onError(subRes.message)\n                    );\n                }\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n        this.departmentService.query({ filter: 'jobhistory-is-null' }).subscribe(\n            (res: HttpResponse<IDepartment[]>) => {\n                if (!this.jobHistory.department || !this.jobHistory.department.id) {\n                    this.departments = res.body;\n                } else {\n                    this.departmentService.find(this.jobHistory.department.id).subscribe(\n                        (subRes: HttpResponse<IDepartment>) => {\n                            this.departments = [subRes.body].concat(res.body);\n                        },\n                        (subRes: HttpErrorResponse) => this.onError(subRes.message)\n                    );\n                }\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n        this.employeeService.query({ filter: 'jobhistory-is-null' }).subscribe(\n            (res: HttpResponse<IEmployee[]>) => {\n                if (!this.jobHistory.employee || !this.jobHistory.employee.id) {\n                    this.employees = res.body;\n                } else {\n                    this.employeeService.find(this.jobHistory.employee.id).subscribe(\n                        (subRes: HttpResponse<IEmployee>) => {\n                            this.employees = [subRes.body].concat(res.body);\n                        },\n                        (subRes: HttpErrorResponse) => this.onError(subRes.message)\n                    );\n                }\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        this.jobHistory.startDate = this.startDate != null ? moment(this.startDate, DATE_TIME_FORMAT) : null;\n        this.jobHistory.endDate = this.endDate != null ? moment(this.endDate, DATE_TIME_FORMAT) : null;\n        if (this.jobHistory.id !== undefined) {\n            this.subscribeToSaveResponse(this.jobHistoryService.update(this.jobHistory));\n        } else {\n            this.subscribeToSaveResponse(this.jobHistoryService.create(this.jobHistory));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<IJobHistory>>) {\n        result.subscribe((res: HttpResponse<IJobHistory>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    private onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n    }\n\n    private onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n\n    trackJobById(index: number, item: IJob) {\n        return item.id;\n    }\n\n    trackDepartmentById(index: number, item: IDepartment) {\n        return item.id;\n    }\n\n    trackEmployeeById(index: number, item: IEmployee) {\n        return item.id;\n    }\n}\n"]}]}