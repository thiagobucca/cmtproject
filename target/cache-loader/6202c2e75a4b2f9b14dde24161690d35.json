{"remainingRequest":"/Users/thiagobucca/Izio/cmtproject/node_modules/thread-loader/dist/cjs.js??ref--9-2!/Users/thiagobucca/Izio/cmtproject/node_modules/ts-loader/index.js??ref--9-3!/Users/thiagobucca/Izio/cmtproject/node_modules/angular-router-loader/src/index.js!/Users/thiagobucca/Izio/cmtproject/node_modules/tslint-loader/index.js!/Users/thiagobucca/Izio/cmtproject/src/main/webapp/app/entities/job/job-update.component.ts","dependencies":[{"path":"/Users/thiagobucca/Izio/cmtproject/src/main/webapp/app/entities/job/job-update.component.ts","mtime":1544538917944},{"path":"/Users/thiagobucca/Izio/cmtproject/node_modules/angular2-template-loader/index.js","mtime":1486570058000},{"path":"/Users/thiagobucca/Izio/cmtproject/node_modules/cache-loader/dist/cjs.js","mtime":1544538323324},{"path":"/Users/thiagobucca/Izio/cmtproject/node_modules/thread-loader/dist/cjs.js","mtime":1544538323028},{"path":"/Users/thiagobucca/Izio/cmtproject/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/thiagobucca/Izio/cmtproject/node_modules/angular-router-loader/src/index.js","mtime":1512749902000},{"path":"/Users/thiagobucca/Izio/cmtproject/node_modules/tslint-loader/index.js","mtime":1519899048000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar core_1 = require(\"@angular/core\");\nvar router_1 = require(\"@angular/router\");\nvar ng_jhipster_1 = require(\"ng-jhipster\");\nvar job_service_1 = require(\"./job.service\");\nvar employee_1 = require(\"app/entities/employee\");\nvar task_1 = require(\"app/entities/task\");\nvar JobUpdateComponent = /** @class */ (function () {\n    function JobUpdateComponent(jhiAlertService, jobService, employeeService, taskService, activatedRoute) {\n        this.jhiAlertService = jhiAlertService;\n        this.jobService = jobService;\n        this.employeeService = employeeService;\n        this.taskService = taskService;\n        this.activatedRoute = activatedRoute;\n    }\n    JobUpdateComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(function (_a) {\n            var job = _a.job;\n            _this.job = job;\n        });\n        this.employeeService.query().subscribe(function (res) {\n            _this.employees = res.body;\n        }, function (res) { return _this.onError(res.message); });\n        this.taskService.query().subscribe(function (res) {\n            _this.tasks = res.body;\n        }, function (res) { return _this.onError(res.message); });\n    };\n    JobUpdateComponent.prototype.previousState = function () {\n        window.history.back();\n    };\n    JobUpdateComponent.prototype.save = function () {\n        this.isSaving = true;\n        if (this.job.id !== undefined) {\n            this.subscribeToSaveResponse(this.jobService.update(this.job));\n        }\n        else {\n            this.subscribeToSaveResponse(this.jobService.create(this.job));\n        }\n    };\n    JobUpdateComponent.prototype.subscribeToSaveResponse = function (result) {\n        var _this = this;\n        result.subscribe(function (res) { return _this.onSaveSuccess(); }, function (res) { return _this.onSaveError(); });\n    };\n    JobUpdateComponent.prototype.onSaveSuccess = function () {\n        this.isSaving = false;\n        this.previousState();\n    };\n    JobUpdateComponent.prototype.onSaveError = function () {\n        this.isSaving = false;\n    };\n    JobUpdateComponent.prototype.onError = function (errorMessage) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    };\n    JobUpdateComponent.prototype.trackEmployeeById = function (index, item) {\n        return item.id;\n    };\n    JobUpdateComponent.prototype.trackTaskById = function (index, item) {\n        return item.id;\n    };\n    JobUpdateComponent.prototype.getSelected = function (selectedVals, option) {\n        if (selectedVals) {\n            for (var i = 0; i < selectedVals.length; i++) {\n                if (option.id === selectedVals[i].id) {\n                    return selectedVals[i];\n                }\n            }\n        }\n        return option;\n    };\n    var _a, _b, _c, _d, _e;\n    JobUpdateComponent = tslib_1.__decorate([\n        core_1.Component({\n            selector: 'jhi-job-update',\n            templateUrl: './job-update.component.html'\n        }),\n        tslib_1.__metadata(\"design:paramtypes\", [typeof (_a = typeof ng_jhipster_1.JhiAlertService !== \"undefined\" && ng_jhipster_1.JhiAlertService) === \"function\" ? _a : Object, typeof (_b = typeof job_service_1.JobService !== \"undefined\" && job_service_1.JobService) === \"function\" ? _b : Object, typeof (_c = typeof employee_1.EmployeeService !== \"undefined\" && employee_1.EmployeeService) === \"function\" ? _c : Object, typeof (_d = typeof task_1.TaskService !== \"undefined\" && task_1.TaskService) === \"function\" ? _d : Object, typeof (_e = typeof router_1.ActivatedRoute !== \"undefined\" && router_1.ActivatedRoute) === \"function\" ? _e : Object])\n    ], JobUpdateComponent);\n    return JobUpdateComponent;\n}());\nexports.JobUpdateComponent = JobUpdateComponent;\n",{"version":3,"file":"/Users/thiagobucca/Izio/cmtproject/src/main/webapp/app/entities/job/job-update.component.ts","sourceRoot":"","sources":["/Users/thiagobucca/Izio/cmtproject/node_modules/angular-router-loader/src/index.js!/Users/thiagobucca/Izio/cmtproject/node_modules/tslint-loader/index.js!/Users/thiagobucca/Izio/cmtproject/src/main/webapp/app/entities/job/job-update.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { JhiAlertService } from 'ng-jhipster';\n\nimport { IJob } from 'app/shared/model/job.model';\nimport { JobService } from './job.service';\nimport { IEmployee } from 'app/shared/model/employee.model';\nimport { EmployeeService } from 'app/entities/employee';\nimport { ITask } from 'app/shared/model/task.model';\nimport { TaskService } from 'app/entities/task';\n\n@Component({\n    selector: 'jhi-job-update',\n    templateUrl: './job-update.component.html'\n})\nexport class JobUpdateComponent implements OnInit {\n    job: IJob;\n    isSaving: boolean;\n\n    employees: IEmployee[];\n\n    tasks: ITask[];\n\n    constructor(\n        private jhiAlertService: JhiAlertService,\n        private jobService: JobService,\n        private employeeService: EmployeeService,\n        private taskService: TaskService,\n        private activatedRoute: ActivatedRoute\n    ) {}\n\n    ngOnInit() {\n        this.isSaving = false;\n        this.activatedRoute.data.subscribe(({ job }) => {\n            this.job = job;\n        });\n        this.employeeService.query().subscribe(\n            (res: HttpResponse<IEmployee[]>) => {\n                this.employees = res.body;\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n        this.taskService.query().subscribe(\n            (res: HttpResponse<ITask[]>) => {\n                this.tasks = res.body;\n            },\n            (res: HttpErrorResponse) => this.onError(res.message)\n        );\n    }\n\n    previousState() {\n        window.history.back();\n    }\n\n    save() {\n        this.isSaving = true;\n        if (this.job.id !== undefined) {\n            this.subscribeToSaveResponse(this.jobService.update(this.job));\n        } else {\n            this.subscribeToSaveResponse(this.jobService.create(this.job));\n        }\n    }\n\n    private subscribeToSaveResponse(result: Observable<HttpResponse<IJob>>) {\n        result.subscribe((res: HttpResponse<IJob>) => this.onSaveSuccess(), (res: HttpErrorResponse) => this.onSaveError());\n    }\n\n    private onSaveSuccess() {\n        this.isSaving = false;\n        this.previousState();\n    }\n\n    private onSaveError() {\n        this.isSaving = false;\n    }\n\n    private onError(errorMessage: string) {\n        this.jhiAlertService.error(errorMessage, null, null);\n    }\n\n    trackEmployeeById(index: number, item: IEmployee) {\n        return item.id;\n    }\n\n    trackTaskById(index: number, item: ITask) {\n        return item.id;\n    }\n\n    getSelected(selectedVals: Array<any>, option: any) {\n        if (selectedVals) {\n            for (let i = 0; i < selectedVals.length; i++) {\n                if (option.id === selectedVals[i].id) {\n                    return selectedVals[i];\n                }\n            }\n        }\n        return option;\n    }\n}\n"]}]}